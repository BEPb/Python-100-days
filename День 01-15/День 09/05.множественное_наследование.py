"""
Python 3.9 Множественное наследование
-Бриллиантовое наследование (алмазное наследование)
-C3 алгоритм (алгоритм замены DFS)
Название файла '05.множественное_наследование.py'

Version: 0.1
Author: Andrej Marinchenko
Date: 2021-11-09
"""


class A(object):  # определяем класс

    def foo(self):  # метод класса
        print('foo of A')  # выводит на печать строку


class B(A):  # определяем класс наследуется от класса А
    pass  # пустой


class C(A):  # определяем класс наследуется от класса А

    def foo(self):  # метод класса
        print('foo fo C')  # выводит на печать строку


class D(B, C):  # определяем класс наследуется от класса В и С
    pass  # пустой


class E(D):  # определяем класс наследуется от класса Е и D

    def foo(self):  # метод класса
        print('foo in E')  # выводит на печать строку
        super().foo()  # обращается к родительскому классу вызывает метод foo()
        super(B, self).foo()  # обращается к родительскому классу вызывает метод foo()
        super(C, self).foo()  # обращается к родительскому классу вызывает метод foo()


if __name__ == '__main__':  # если программа запущена как основаная
    d = D()  # определяем объект
    d.foo()  # вызываем метод объекта, в котором такой метод сам по себе не прописан, но прописан в родительском
    # классе С, т.о. выводится сообщение в 1-й строке
    e = E()  # определяем объект
    e.foo()  # вызываем метод, который в свою очередь вызывает другие методы других унаследованных суперклассов
