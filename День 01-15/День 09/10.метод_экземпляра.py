"""
Python 3.10 Применение метода экземпляра и метода класса
Название файла '10.метод_экземпляра.py'

Version: 0.1
Author: Andrej Marinchenko
Date: 2023-04-07
"""

from math import sqrt  # импорт модуля квадратного корня


from math import sqrt  # импорт функции квадратный корень из модуля математических операций


class Triangle(object):  # определяем класс треугольника

    def __init__(self, a, b, c):  # инициализируем класс, на входе 3 аргумента
        self._a = a  # создаем атрибут стороны а = первому принимаемому аргументу
        self._b = b  # создаем атрибут стороны b = второму принимаемому аргументу
        self._c = c  # создаем атрибут стороны c = третьему принимаемому аргументу

    @staticmethod  # описываем свойство статического метода
    def is_valid(a, b, c):  # метод проверки возможно ли создать треугольник
        return a + b > c and b + c > a and a + c > b  # если 3 условия выполняются, то на выходе значение истина

    def perimeter(self):  # метод расчета периметра
        return self._a + self._b + self._c  # возвращает значение периметра

    def area(self):  # метод расчета площади
        half = self.perimeter() / 2  # вычисление полупериметра (промежуточная величина при расчете площади)
        return sqrt(half * (half - self._a) * (half - self._b) * (half - self._c))   # возвращает значение площади


def main():  # главная функция
    a, b, c = 3, 4, 5  # задаем значения сторон треугольника
    # Статические методы и методы класса вызываются,
    if Triangle.is_valid(a, b, c):  # осуществляем проверку на возможность создать треугольник (если да на входе истина)
        t = Triangle(a, b, c)  # создаем экземпляр класса (объект)
        print(t.perimeter())  # выводим значение периметра
        # Вы тоже самое можете сделать, через обращение к классу
        # print(Triangle.perimeter(t))
        print(t.area())  # выводим значение площади
        # Вы тоже самое можете сделать, через обращение к классу
        # print(Triangle.area(t))
    else:  # иначе
        print('Не получается сформировать треугольник.')


if __name__ == '__main__':  # проверка запуска главной программы
    main()  # запускаем главную функцию
